c
@map[1]
key
i
@map[1]
c
@store
@map
c
list.first.key
list.first
lsit.first
list
c
next_node.prev
next_node.prev.key
next_node.next.key
next_node.key
next_node
node
self.to_s
s
@prev.next.key
@next.prev.key
s
@prev.key
@prev.next.key
@prev.next
s
@next.prev.key
@next.prev
@prev.key
@next.key
@next
s
node.key
node
s
c
@next.key
@next
c
list.first.val
list.first
list.to_s
list.first.next.key
list.first.next
list.first
lsit.first
list
c
list.to_s
s
node.key
s
node.key
node
s
list.get(:first)
s
node.key
node
s
node
s
list.remove(:first)
list.get(:first)
list
lsit
c
empty_list.first
empty_list
c
list
list.empty?
empty_list.empty?
empty_list
c
sc
s
@tail.prev == @head
@head.next == @tail
@head.next
@head
